#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Popcorn.DataClass
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="popcorn")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUsers(Users instance);
    partial void UpdateUsers(Users instance);
    partial void DeleteUsers(Users instance);
    partial void InsertUpdates(Updates instance);
    partial void UpdateUpdates(Updates instance);
    partial void DeleteUpdates(Updates instance);
    partial void InsertMovies(Movies instance);
    partial void UpdateMovies(Movies instance);
    partial void DeleteMovies(Movies instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["popcornConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Users> Users
		{
			get
			{
				return this.GetTable<Users>();
			}
		}
		
		public System.Data.Linq.Table<Updates> Updates
		{
			get
			{
				return this.GetTable<Updates>();
			}
		}
		
		public System.Data.Linq.Table<Movies> Movies
		{
			get
			{
				return this.GetTable<Movies>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _GuidID;
		
		private string _Email;
		
		private string _Name;
		
		private string _Type;
		
		private string _Password;
		
		private string _Phone;
		
		private EntitySet<Updates> _Updates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGuidIDChanging(System.Guid value);
    partial void OnGuidIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public Users()
		{
			this._Updates = new EntitySet<Updates>(new Action<Updates>(this.attach_Updates), new Action<Updates>(this.detach_Updates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuidID", AutoSync=AutoSync.OnInsert, DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid GuidID
		{
			get
			{
				return this._GuidID;
			}
			set
			{
				if ((this._GuidID != value))
				{
					this.OnGuidIDChanging(value);
					this.SendPropertyChanging();
					this._GuidID = value;
					this.SendPropertyChanged("GuidID");
					this.OnGuidIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(10)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Updates", Storage="_Updates", ThisKey="GuidID", OtherKey="GuidID")]
		public EntitySet<Updates> Updates
		{
			get
			{
				return this._Updates;
			}
			set
			{
				this._Updates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Updates(Updates entity)
		{
			this.SendPropertyChanging();
			entity.Users = this;
		}
		
		private void detach_Updates(Updates entity)
		{
			this.SendPropertyChanging();
			entity.Users = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Updates")]
	public partial class Updates : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_Update;
		
		private System.Nullable<System.Guid> _GuidID;
		
		private string _ID_Admins;
		
		private string _Status;
		
		private string _Update_Time;
		
		private string _ID_Moives;
		
		private EntityRef<Users> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_UpdateChanging(string value);
    partial void OnID_UpdateChanged();
    partial void OnGuidIDChanging(System.Nullable<System.Guid> value);
    partial void OnGuidIDChanged();
    partial void OnID_AdminsChanging(string value);
    partial void OnID_AdminsChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnUpdate_TimeChanging(string value);
    partial void OnUpdate_TimeChanged();
    partial void OnID_MoivesChanging(string value);
    partial void OnID_MoivesChanged();
    #endregion
		
		public Updates()
		{
			this._Users = default(EntityRef<Users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Update", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_Update
		{
			get
			{
				return this._ID_Update;
			}
			set
			{
				if ((this._ID_Update != value))
				{
					this.OnID_UpdateChanging(value);
					this.SendPropertyChanging();
					this._ID_Update = value;
					this.SendPropertyChanged("ID_Update");
					this.OnID_UpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuidID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> GuidID
		{
			get
			{
				return this._GuidID;
			}
			set
			{
				if ((this._GuidID != value))
				{
					if (this._Users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGuidIDChanging(value);
					this.SendPropertyChanging();
					this._GuidID = value;
					this.SendPropertyChanged("GuidID");
					this.OnGuidIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Admins", DbType="NChar(10)")]
		public string ID_Admins
		{
			get
			{
				return this._ID_Admins;
			}
			set
			{
				if ((this._ID_Admins != value))
				{
					this.OnID_AdminsChanging(value);
					this.SendPropertyChanging();
					this._ID_Admins = value;
					this.SendPropertyChanged("ID_Admins");
					this.OnID_AdminsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NChar(10)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Update_Time", DbType="NVarChar(50)")]
		public string Update_Time
		{
			get
			{
				return this._Update_Time;
			}
			set
			{
				if ((this._Update_Time != value))
				{
					this.OnUpdate_TimeChanging(value);
					this.SendPropertyChanging();
					this._Update_Time = value;
					this.SendPropertyChanged("Update_Time");
					this.OnUpdate_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Moives", DbType="NChar(10)")]
		public string ID_Moives
		{
			get
			{
				return this._ID_Moives;
			}
			set
			{
				if ((this._ID_Moives != value))
				{
					this.OnID_MoivesChanging(value);
					this.SendPropertyChanging();
					this._ID_Moives = value;
					this.SendPropertyChanged("ID_Moives");
					this.OnID_MoivesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Updates", Storage="_Users", ThisKey="GuidID", OtherKey="GuidID", IsForeignKey=true)]
		public Users Users
		{
			get
			{
				return this._Users.Entity;
			}
			set
			{
				Users previousValue = this._Users.Entity;
				if (((previousValue != value) 
							|| (this._Users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Users.Entity = null;
						previousValue.Updates.Remove(this);
					}
					this._Users.Entity = value;
					if ((value != null))
					{
						value.Updates.Add(this);
						this._GuidID = value.GuidID;
					}
					else
					{
						this._GuidID = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_Movies")]
	public partial class Movies : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Guid_Movie;
		
		private string _Name_Movie;
		
		private string _ID_Type;
		
		private string _ID_Rate;
		
		private string _Date_Movie;
		
		private string _ID_Caster;
		
		private string _ID_Director;
		
		private string _ID_Review_Masters;
		
		private string _ID_Update;
		
		private string _ID_Review_Users;
		
		private string _Trialer;
		
		private string _Picture_Movie;
		
		private string _Detail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGuid_MovieChanging(System.Guid value);
    partial void OnGuid_MovieChanged();
    partial void OnName_MovieChanging(string value);
    partial void OnName_MovieChanged();
    partial void OnID_TypeChanging(string value);
    partial void OnID_TypeChanged();
    partial void OnID_RateChanging(string value);
    partial void OnID_RateChanged();
    partial void OnDate_MovieChanging(string value);
    partial void OnDate_MovieChanged();
    partial void OnID_CasterChanging(string value);
    partial void OnID_CasterChanged();
    partial void OnID_DirectorChanging(string value);
    partial void OnID_DirectorChanged();
    partial void OnID_Review_MastersChanging(string value);
    partial void OnID_Review_MastersChanged();
    partial void OnID_UpdateChanging(string value);
    partial void OnID_UpdateChanged();
    partial void OnID_Review_UsersChanging(string value);
    partial void OnID_Review_UsersChanged();
    partial void OnTrialerChanging(string value);
    partial void OnTrialerChanged();
    partial void OnPicture_MovieChanging(string value);
    partial void OnPicture_MovieChanged();
    partial void OnDetailChanging(string value);
    partial void OnDetailChanged();
    #endregion
		
		public Movies()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guid_Movie", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid Guid_Movie
		{
			get
			{
				return this._Guid_Movie;
			}
			set
			{
				if ((this._Guid_Movie != value))
				{
					this.OnGuid_MovieChanging(value);
					this.SendPropertyChanging();
					this._Guid_Movie = value;
					this.SendPropertyChanged("Guid_Movie");
					this.OnGuid_MovieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Movie", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name_Movie
		{
			get
			{
				return this._Name_Movie;
			}
			set
			{
				if ((this._Name_Movie != value))
				{
					this.OnName_MovieChanging(value);
					this.SendPropertyChanging();
					this._Name_Movie = value;
					this.SendPropertyChanged("Name_Movie");
					this.OnName_MovieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Type", DbType="NChar(10)")]
		public string ID_Type
		{
			get
			{
				return this._ID_Type;
			}
			set
			{
				if ((this._ID_Type != value))
				{
					this.OnID_TypeChanging(value);
					this.SendPropertyChanging();
					this._ID_Type = value;
					this.SendPropertyChanged("ID_Type");
					this.OnID_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Rate", DbType="NChar(10)")]
		public string ID_Rate
		{
			get
			{
				return this._ID_Rate;
			}
			set
			{
				if ((this._ID_Rate != value))
				{
					this.OnID_RateChanging(value);
					this.SendPropertyChanging();
					this._ID_Rate = value;
					this.SendPropertyChanged("ID_Rate");
					this.OnID_RateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_Movie", DbType="NVarChar(50)")]
		public string Date_Movie
		{
			get
			{
				return this._Date_Movie;
			}
			set
			{
				if ((this._Date_Movie != value))
				{
					this.OnDate_MovieChanging(value);
					this.SendPropertyChanging();
					this._Date_Movie = value;
					this.SendPropertyChanged("Date_Movie");
					this.OnDate_MovieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Caster", DbType="NChar(10)")]
		public string ID_Caster
		{
			get
			{
				return this._ID_Caster;
			}
			set
			{
				if ((this._ID_Caster != value))
				{
					this.OnID_CasterChanging(value);
					this.SendPropertyChanging();
					this._ID_Caster = value;
					this.SendPropertyChanged("ID_Caster");
					this.OnID_CasterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Director", DbType="NChar(10)")]
		public string ID_Director
		{
			get
			{
				return this._ID_Director;
			}
			set
			{
				if ((this._ID_Director != value))
				{
					this.OnID_DirectorChanging(value);
					this.SendPropertyChanging();
					this._ID_Director = value;
					this.SendPropertyChanged("ID_Director");
					this.OnID_DirectorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Review_Masters", DbType="NChar(10)")]
		public string ID_Review_Masters
		{
			get
			{
				return this._ID_Review_Masters;
			}
			set
			{
				if ((this._ID_Review_Masters != value))
				{
					this.OnID_Review_MastersChanging(value);
					this.SendPropertyChanging();
					this._ID_Review_Masters = value;
					this.SendPropertyChanged("ID_Review_Masters");
					this.OnID_Review_MastersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Update", DbType="NChar(10)")]
		public string ID_Update
		{
			get
			{
				return this._ID_Update;
			}
			set
			{
				if ((this._ID_Update != value))
				{
					this.OnID_UpdateChanging(value);
					this.SendPropertyChanging();
					this._ID_Update = value;
					this.SendPropertyChanged("ID_Update");
					this.OnID_UpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Review_Users", DbType="NChar(10)")]
		public string ID_Review_Users
		{
			get
			{
				return this._ID_Review_Users;
			}
			set
			{
				if ((this._ID_Review_Users != value))
				{
					this.OnID_Review_UsersChanging(value);
					this.SendPropertyChanging();
					this._ID_Review_Users = value;
					this.SendPropertyChanged("ID_Review_Users");
					this.OnID_Review_UsersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trialer", DbType="NVarChar(MAX)")]
		public string Trialer
		{
			get
			{
				return this._Trialer;
			}
			set
			{
				if ((this._Trialer != value))
				{
					this.OnTrialerChanging(value);
					this.SendPropertyChanging();
					this._Trialer = value;
					this.SendPropertyChanged("Trialer");
					this.OnTrialerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture_Movie", DbType="NVarChar(MAX)")]
		public string Picture_Movie
		{
			get
			{
				return this._Picture_Movie;
			}
			set
			{
				if ((this._Picture_Movie != value))
				{
					this.OnPicture_MovieChanging(value);
					this.SendPropertyChanging();
					this._Picture_Movie = value;
					this.SendPropertyChanged("Picture_Movie");
					this.OnPicture_MovieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detail", DbType="NVarChar(MAX)")]
		public string Detail
		{
			get
			{
				return this._Detail;
			}
			set
			{
				if ((this._Detail != value))
				{
					this.OnDetailChanging(value);
					this.SendPropertyChanging();
					this._Detail = value;
					this.SendPropertyChanged("Detail");
					this.OnDetailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
